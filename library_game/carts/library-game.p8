pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
--game loop
function _init()
 rain_init()
 p_init()
 --sk_init()
 coin_index={}
 q_brick_index={}

 sk_index={}
 sk_small_index={}

 gravity=.2
 friction=.85

 palt(0,false)
 palt(2,true)

 rx1=0 rx2=0
 ry1=0 ry2=0

 cam_x=0
 map_start=0
 map_end=1024
 success=false
end

function _update60()
 p_update()
 p_animate()
 rain_update()
 sk_update()
 sk_animate()
 sk_small_update()
 sk_small_animate()
 cam_update()
 coin_update()
 q_brick_update()
end

function _draw()
 cls(1)
 rain_draw()
 map(0,0)
 add_coin()
 add_q_brick()
 add_sk()
 add_sk_small()
 p_draw()
 print('score: '..p.score,cam_x,0)
end
-->8
--player
function p_init()
 p={
  sp=1,
  flp=false,
  x=2,
  y=13*8,
  w=16,
  h=16,
  dx=0,
  dy=0,
  max_dx=0,
  max_dy=4,
  anim=0,
  running=false,
  sliding=false,
  landed=false,
  jumping=false,
  falling=false,
  looper=false,
  waiting=0,
  acc=.25,
  boost=3.7,
  score=0
 }
end

function p_update()
 p.dy+=gravity
 p.dx*=friction
 --input 
 --move left/right
 if btn(⬅️) then 
  p.dx-=p.acc 
  p.running=true
  p.flp=true
 end
 if btn(➡️) then 
  p.dx+=p.acc 
  p.running=true
  p.flp=false
 end
--slide
 if p.running
  and not btn(⬅️)
  and not btn(➡️)
  and not p.falling
  and not p.jumping then
  p.running=false
  p.sliding=true
 end
--jump
 if btnp(4)
 and p.landed then
  sfx(0)
  p.dy-=p.boost 
  p.landed=false
 end
 if btn(5) then
  p.max_dx=2
 elseif not btn(5) then
  p.max_dx=1.5
 end

 --collisions
 --down
 if p.dy>0 then
  p.falling=true
  p.landed=false
  p.jumping=false

  p.dy=limit_speed(p.dy,p.max_dy)

  --map collisions
  if map_collision(p,'down',0)
  or map_collision(p,'down',1) then
   p.landed=true
   p.falling=false
   p.dy=0
   p.y-=((p.y+p.h+1)%8)-1
  end
 --up
 elseif p.dy<0 then
  p.jumping=true
  if map_collision(p,'up',0) then
   sfx(3)
   p.dy=0
  end
 end
 --left
 if p.dx<0 then
  p.dx=limit_speed(p.dx,p.max_dx)
  if map_collision(p,'left',0) then
   p.dx=0
  end
 --right
 elseif p.dx>0 then 
  p.dx=limit_speed(p.dx,p.max_dx)
  if map_collision(p,'right',0) then
   p.dx=0
  end
 end
 --stop sliding
 if p.sliding then
  if abs(p.dx)<.2
  or p.running then
   p.dx=0
   p.sliding=false
  end
 end
 --apply change in loc
 p.x+=p.dx
 p.y+=p.dy
end

function p_animate()
 if p.running 
 and p.landed then
  p.waiting=0
  if time()-p.anim>.05 then
   p.anim=time()
   p.sp+=2
   if p.sp>41 then
    p.sp=33
   end
   if p.sp<33 then
    p.sp=33
   end
  end
  elseif not p.landed then
   p.waiting=0
   p.sp=11
  else
   if p.sp>10 then
    p.sp=1
   end
   if p.waiting<rnd(540)+300 then
    p.waiting+=1
   else
    if time()-p.anim>.1 then
     p.anim=time()
     if p.looper==false then
      p.sp+=2
      if p.sp>=9 then
       p.looper=true
      end
     elseif p.looper==true then
      p.sp-=2
      if p.sp<=1 then
       p.sp=1
       p.looper=false
       p.waiting=0
     end
    end
   end
  end
 end
end

function p_draw()
  spr(p.sp,p.x,p.y,p.w/8,p.h/8,p.flp)
end
-->8
--skeleton
function sk_update()
 if #sk_index!=0 then
  for sk in all(sk_index) do
   if not sk.switch then
    if sk.hold<100 then
     sk.hold+=1
    else
     sk.hold=0
     sk.is_waiting=true
    end
   else
    if sk.hold<100 then
     sk.hold+=1
    else
     sk.hold=0
     sk.is_waiting=false
    end
   end
   if sk.is_waiting then
    sk.flp=true
    sk.dx-=.04
    sk.switch=not sk.switch
   else
    sk.flp=false
    sk.dx+=.04
    sk.switch=not sk.switch
   end
   if sk.dx>0 
   or sk.dx<0 then
    sk.dx=limit_speed(sk.dx,sk.max_dx)
   end
   sk.x+=sk.dx
   if object_collide(p.x+3,p.y+1,p.x+3+p.w-6,p.y+1+p.h-1,sk.x+3,sk.y+3,sk.x+3+sk.w-6,sk.y+3+sk.h-3) then
    if sk.hit==false then
     sk.hit=true
     success=true
    end
   end
  end
 end
end

function sk_animate()
 if #sk_index!=0 then
  for sk in all(sk_index) do
   if time()-sk.anim>.1 
   and abs(sk.dx)>.16 then
    sk.anim=time()
    if sk.sp==64 then
     sk.forward=not sk.forward
    end
    if sk.sp==72 then
     sk.forward=not sk.forward
    end
    if sk.forward then
     sk.sp+=2
    else
     sk.sp-=2
    end
   end
  end
 end
end

function add_sk()
 obj_search('sk',128)
 for sk in all(sk_index) do
  spr(sk.sp,sk.x,sk.y,sk.w/8,sk.h/8,sk.flp)
 end
end

function sk_small_update()
 if #sk_small_index!=0 then
  for sk_small in all(sk_small_index) do
   if not sk_small.switch then
    if sk_small.hold<200 then
     sk_small.hold+=1
    else
     sk_small.hold=0
     sk_small.is_waiting=true
    end
   else
    if sk_small.hold<200 then
     sk_small.hold+=1
    else
     sk_small.hold=0
     sk_small.is_waiting=false
    end
   end
   if sk_small.is_waiting then
    sk_small.flp=true
    sk_small.dx-=.025
    sk_small.switch=not sk_small.switch
   else
    sk_small.flp=false
    sk_small.dx+=.025
    sk_small.switch=not sk_small.switch
   end
   if sk_small.dx>0 
   or sk_small.dx<0 then
    sk_small.dx=limit_speed(sk_small.dx,sk_small.max_dx)
   end
   sk_small.x+=sk_small.dx
   if object_collide(p.x+3,p.y+1,p.x+3+p.w-6,p.y+1+p.h-1,sk_small.x+3,sk_small.y+3,sk_small.x+3+sk_small.w-6,sk_small.y+3+sk_small.h-3) then
    if sk_small.hit==false then
     sk_small.hit=true
     success=true
    end
   end
  end
 end
end

function sk_small_animate()
 if #sk_small_index!=0 then
  for sk_small in all(sk_small_index) do
   if time()-sk_small.anim>.1 
   and abs(sk_small.dx)>.16 then
    sk_small.anim=time()
    if sk_small.sp==96 then
     sk_small.forward=not sk_small.forward
    end
    if sk_small.sp==99 then
     sk_small.forward=not sk_small.forward
    end
    if sk_small.forward then
     sk_small.sp+=1
    else
     sk_small.sp-=1
    end
   end
  end
 end
end

function add_sk_small()
 obj_search('sk_small',128)
 for sk_small in all(sk_small_index) do
  spr(sk_small.sp,sk_small.x,sk_small.y,sk_small.w/8,sk_small.h/8,sk_small.flp)
 end
end
-->8
--coins and bricks
function add_coin()
 obj_search('coin',128)
 for coin in all(coin_index) do
  spr(coin.sp,coin.x*8,coin.y*8,coin.w/8,coin.h/8)
 end
end

function coin_update()
 if #coin_index!=0 then
  for coin in all(coin_index) do
   coin.sp+=.15
   if coin.sp>=184
   and coin.shimmer<coin.no_shimmer_length then
    coin.shimmer+=1
    coin.sp=181
   end
   if coin.sp>188
   and coin.shimmer==coin.no_shimmer_length then
    coin.sp=181
    coin.shimmer=0
    coin.no_shimmer_length=flr(rnd(8))+3
   end
   if object_collide(p.x+3,p.y+1,p.x+3+p.w-6,p.y+1+p.h-1,coin.x*8,coin.y*8,coin.x*8+coin.w,coin.y*8+coin.h) then
    coin.y=-10
    sfx(1)
    p.score+=1
    del(coin_index,coin)
   end
  end
 end
end

function add_q_brick()
 obj_search('q_brick',177)
 for q_brick in all(q_brick_index) do
  if not q_brick.fin then
   spr(q_brick.sp,q_brick.x*8,q_brick.y*8,q_brick.w/8,q_brick.h/8)
  else
   mset(q_brick.x,q_brick.y,155)
  end
 end
end

function q_brick_update()
 if #q_brick_index!=0 then
  for q_brick in all(q_brick_index) do
   if not q_brick.run
   and not q_brick.fin then
    q_brick.sp+=.15
    if q_brick.sp>143 then
     q_brick.sp=138
    end
   elseif q_brick.run
   and not q_brick.fin then
    q_brick.sp=154
   elseif q_brick.run 
   and q_brick.fin then
    q_brick.sp=155
   end
   if object_collide(p.x,p.y+1,p.x+p.w,p.y+1+p.h-2,q_brick.x*8,(q_brick.y*8)+8,q_brick.x*8+q_brick.w,(q_brick.y*8)+8)
   and p.jumping
   and not q_brick.fin then
    sfx(3)
    q_brick.hit=true
    p.dy=0
    p.y+=1
   end
   if q_brick.hit
   and not q_brick.run then
    if q_brick.start_height<q_brick.max_height then
     if time()-q_brick.anim>.001 then
      q_brick.anim=time()
      q_brick.start_height+=.15
      q_brick.y-=.15
      q_brick.run=true
     end
    end
   elseif q_brick.run then
    if q_brick.hold<2 then
     q_brick.hold+=.25
    else
     if q_brick.y-q_brick.return_height>.1 then
      if time()-q_brick.anim>.001 then
       q_brick.anim=time()
       q_brick.y+=.15
      end
     else
      q_brick.fin=true
      q_brick.y=q_brick.return_height
     end
    end
   end
  end
 end
end
-->8
--rain
function rain_init()
 local screen_size=128
 raincol=7
 rainx={}
 rainy={}
 for i=1,8 do
  rain_init_loop(50*i,screen_size*i)
 end
end

function rain_init_loop(num,screen_size)
 local block=64
 for i=(num-49),num do
  add(rainx,(num-50))
  add(rainy,flr(rnd(screen_size+block)-screen_size-block))
 end
 rainx[(num-49)]=screen_size-(block*3)
 for i=(num-48),num do
  rainx[i]=rainx[i-1]+(flr(3+(rnd(7))))
 end
end

function rain_update()
 local screen_size=128
 for i=1,8 do
  rain_update_loop(50*i,screen_size*i)
 end
end

function rain_update_loop(num,screen_size)
 block=64
 for i=(num-49),num do
  rainx[i]+=2
  rainy[i]+=2
  if rainy[i]>128 then
   randomx=flr(rnd(screen_size+block)-block)
   rainx[i]=randomx+3
   rainy[i]=0
  end
 end
end

function rain_draw()
 for i=1,#rainx do
  line(rainx[i],rainy[i],rainx[i]+2,rainy[i]+2,raincol)
 end
end
-->8
--custom functions
--object searching by map tile
function obj_search(obj_name,cell_replace)
 local searched=false
 if not searched then
  for x=0,127 do
   for y=0,15 do
    if obj_name=='coin' then
     if mget(x,y)==181 then
      add_object('coin',x,y,8,8)
      mset(x,y,cell_replace)
     end
    elseif obj_name=='sk' then
     if mget(x,y)==64 then
      add_object('sk',x,y,16,16)
      mset(x,y,cell_replace)
     end
    elseif obj_name=='sk_small' then
     if mget(x,y)==96 then
      add_object('sk_small',x,y,8,8)
      mset(x,y,cell_replace)
     end
    elseif obj_name=='q_brick' then
     if mget(x,y)==138 then
      add_object('q_brick',x,y,8,8)
      mset(x,y,cell_replace)
     end
    end
   end
  end
  searched=true
 end
end
--add object
function add_object(obj_name,objx,objy,objw,objh)
 if obj_name=='coin' then
  local coin={
   sp=181,
   x=objx,
   y=objy,
   w=objw,
   h=objh,
   shimmer=0,
   no_shimmer_length=flr(rnd(8))+3,
   anim=0
  }
  add(coin_index,coin)
 elseif obj_name=='sk' then
  local newx=objx*8
  local newy=objy*8
  local sk={
   sp=64,
   x=newx,
   y=newy,
   w=objw,
   h=objh,
   flp=false,
   dx=0,
   dy=0,
   max_dx=.4,
   max_dy=4,
   anim=0,
   hold=0,
   switch=false,
   is_waiting=false,
   forward=false,
   falling=false,
   landed=true,
   boost=3,
   hit=false
  }
  add(sk_index,sk)
 elseif obj_name=='sk_small' then
  local newx=objx*8
  local newy=objy*8
  local sk_small={
   sp=96,
   x=newx,
   y=newy,
   w=objw,
   h=objh,
   flp=false,
   dx=0,
   dy=0,
   max_dx=.25,
   max_dy=4,
   anim=0,
   hold=0,
   switch=false,
   is_waiting=false,
   forward=false,
   falling=false,
   landed=true,
   boost=3,
   hit=false
  }
  add(sk_small_index,sk_small)
 elseif obj_name=='q_brick' then
  local q_brick={
   sp=138,
   x=objx,
   y=objy,
   w=objw,
   h=objh,
   anim=0,
   hold=0,
   run=false,
   fin=false,
   return_height=objy,
   start_height=0,
   max_height=4/8,
   hit=false
  }
  add(q_brick_index,q_brick)
 end
end
--speed limiter
function limit_speed(num,maximum)
 return mid(-maximum,num,maximum)
end
--collisions
function map_collision(obj,aim,flag)
 local x=obj.x local y=obj.y
 local w=obj.w local h=obj.h
 local x1=0    local x2=0
 local y1=0    local y2=0
 --create hitbox
 if aim=='left' then
  x1=x+2   x2=x+5
  y1=y+1   y2=y+h-2

 elseif aim=='right' then
  x1=x+w-3 x2=x+w-5
  y1=y+1   y2=y+h-2

 elseif aim=='up' 
 and not obj.flp then
  x1=x+5   x2=x+w-5
  y1=y-1   y2=y
 elseif aim=='up' 
 and obj.flp then
  x1=x+5   x2=x+w-5
  y1=y-1   y2=y

 elseif aim=='down'
 and not obj.flp then
  x1=x+5   x2=x+w-6
  y1=y+h-1   y2=y+h+1
 elseif aim=='down'
 and obj.flp then
  x1=x+5   x2=x+w-6
  y1=y+h-1   y2=y+h+1
 end
 rx1=x1 rx2=x2
 ry1=y1 ry2=y2
 --convert hitbox to pixels
 x1/=8   x2/=8
 y1/=8   y2/=8
 --check collision
 if fget(mget(x1,y1),flag)
 or fget(mget(x1,y2),flag)
 or fget(mget(x2,y1),flag)
 or fget(mget(x2,y2),flag) then
  return true
 else
  return false
 end
end
--hitbox collision
function object_collide(player_x1,player_y1,player_x2,player_y2,enemy_x1,enemy_y1,enemy_x2,enemy_y2)
 local collide_1=player_y1<=enemy_y2
 local collide_2=player_y2>=enemy_y1
 local collide_3=player_x1<=enemy_x2
 local collide_4=player_x2>=enemy_x1

 if collide_1 and collide_2
 and collide_3 and collide_4 then
  return true
 else
  return false
 end
end
-->8
--camera
function cam_update()
 cam_x=p.x-64+(p.w/2)
 if cam_x<map_start then
  cam_x=map_start
 end
 if cam_x>map_end then
  cam_x=map_end
 end
 camera(cam_x,0)
end
__gfx__
00000000222222222222222222222222222222222222222222222222222222222222222222222222222222222222200000022222222222222222222222222222
00000000222220000002222222222000000222222222200000022222222220000002222222222000000222222222000000002222222222222222222222222222
00700700222200000000222222220000000022222222000000002222222200000000222222220000000022222222004444402222222222222222222222222222
00077000222200444440222222220044444022222222004444402222222200444440222222220400440022222222040044002222222222222222222222222222
00077000222204004400222222220400440022222222040044002222222204004400222222220077007702222222007700770222222222222222222222222222
00700700222200770077022222220077007702222222007700770222222200770077022222200077000702222220007700070222222222222222222222222222
00000000222000770007022222200077000702222220007700070222222000770007022222220400440040222220040044000022222222222222222222222222
00000000222204004400022222220400440002222222040044000222222204004400022222222044444002222204004444400402222222222222222222222222
00000000222220444440222222222044444022222222204444402022222220444440402222222044444002222220dd0000000022220000222222222222222222
0000000022220d000000222222220d000000222222220d000000040222220d000000022222220d0000002222222200ed0e002222220000222222222222222222
000000002220d0ed0e0d02222220d0ed0e0002222220d0ed0e0d00222220d0ed0e0002222220d0ed0e022222222220dedd022222207447022222222222222222
00000000222000dedd000222222000dedd004022222000dedd002222222000dedd022222222000dedd0222222222200000002222204444022222222222222222
00000000222040000004022222204000000202222220400000022222222040000002222222204000000222222222200000002222200000022222222222222222
00000000222200000000222222220000000222222222000000022222222200000002222222220000000222222222090020902222040de0402222222222222222
00000000222220900902222222222090090222222222209009022222222220900902222222222090090222222222002220022222209009022222222222222222
00000000222222002002222222222200200222222222220020022222222222002002222222222200200222222222222222222222200220022222222222222222
00000000222220000002222222222222222222222222222222222222222220000002222222222000000222222222222222222222222222222222222222222222
00000000222200000000222222222000000222222222200000022222222200000000222222220000000022222222222222222222222222222222222222222222
00000000222200444440222222220000000022222222000000002222222200444440222222220044444022222222222222222222222222222222222222222222
00000000222204004400222222220044444022222222004444402222222204004400222222220400440022222222222222222222222222222222222222222222
00000000222200770077022222220400440022222222040044002222222200770077022222220077007702222222222222222222222222222222222222222222
00000000222000770007022222220077007702222222007700770222222000770007022222200077000702222222222222222222222222222222222222222222
00000000222204004400022222200077000702222220007700070222222204004400022222220400440002222222222222222222222222222222222222222222
00000000222220444440222222220400440002222222040044000222222220444440222222222044444022222222222222222222222222222222222222222222
0000000022220d00000022222222204444402222222220444440222222220d000000222222220d00000022222222222222222222222222222222222222222222
000000002220d0ed0e0d022222220d000000222222220d00000022222220d0ed0e0d02222220d0ed0e0d02222222222222222222222222222222222222222222
00000000220400dedd0040222220d0ed0e0d02222220d0ed0e0d0222220400dedd004022220400dedd0040222222222222222222222222222222222222222222
000000002220200000000222220400dedd004022220400dedd004022222020000002022222202000000002222222222222222222222222222222222222222222
00000000222220002000022222202000000002222220200000020222222220000002222222222000000022222222222222222222222222222222222222222222
00000000222220002209022222222000200022222222200000022222222222000090222222222090009022222222222222222222222222222222222222222222
00000000222209022200222222220902220902222222209090022222222220900002222222222002200222222222222222222222222222222222222222222222
00000000222220222222222222222002220002222222220000222222222220022222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222000000222222222200000022222222220000002222222222000000222222222200000022222222222222222222222222222222222222222222222222222
22220777777022222222077777702222222207777770222222220777777022222222077777702222222222222222222222222222222222222222222222222222
22207777777702222220777777770222222077777777022222207777777702222220777777770222222222222222222222222222222222222222222222222222
22207777777770222220777777777022222077777777702222207777777770222220777777777022222222222222222222222222222222222222222222222222
22207770777070222220777077707022222077707770702222207770777070222220777077707022222222222222222222222222222222222222222222222222
22207770070070222220777007007022222077700700702222207770070070222220777007007022222222222222222222222222222222222222222222222222
22220770870870222222077087087022222207708708702222220770870870222222077087087022222222222222222222222222222222222222222222222222
22222077777700222222207777770022222220777777002222222077777700222222207777770022222222222222222222222222222222222222222222222222
22220006070702222222000707070222222200070707022222222007070702222222200707070222222222222222222222222222222222222222222222222222
22200110000002222220011000000222222201100000022222222010000002222222201000000222222222222222222222222222222222222222222222222222
22050011000050222205001100005022222050110005022222222001050222222222200105022222222222222222222222222222222222222222222222222222
22200000000002222220200000020222222200000000222222222000000222222222000000002222222222222222222222222222222222222222222222222222
22220022220022222222200220022222222222000022222222222002200222222222002222002222222222222222222222222222222222222222222222222222
20000022200000222000002220000022222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
07777702077777020777770207777702222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
07005070070050700700507007005070222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
07080870070808700708087007080870222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
20777702207777022077770220777702222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
00070700000707002007070220070702222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
00000000000000002000002220000022222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
20020022220002222002002222000222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
66666666666666666666666666666666666666666600000000000000000000000000000000000000277aaaa2277aaaa2277aaaa2277aaaa2277aaaa2277aaaa2
666666666666666666666666666666666666666660009999999999999999999999999999999999907999999a7999999a7999999a7999999a7999999a7999999a
666666666555555555555555555555566666666660900000000000000000000000000000000000007997a99479997a9479999aa47a9999a477a99994797a9994
666666666444444444444444444445566666666600900aa000660030aa000080003380088000aa00a9799a94a99799a4aa997994a9a99a94a99a99a4a799a994
666666666422222222222222222245566666666609000a9088660c00aa00038000008cc00000a900a999a994a9999a94a99999a4aa999994a9a99994a99a9994
666666666422222222222222222245566666666009000a9088660c30aa00338000338cc88600a900a9999994a9999994a9999994a9999994a9999994a9999994
66666666642222222222222222224556666666609400044088660c00aa03308000008cc006004400a999a994a9999a94a99999a4aa999994a9a99994a99a9994
66666666642222222222222222224556666666009000000088660c30aa33008000338cc886000000244444422444444224444442244444422444444224444442
66555566642222222222222222224556666666090400a9909999999999999999999999999990a990277aaaa2277aaaa222222222222222222222222222222222
655555566422222222222222222245566666600940000a94000000000000000000000000000a94007aaaaaaa7999999a22222222222222222222222222222222
55555555642222222222222222224556666660940400000066cc00000000066000000000550000007aaaaaa97999999422222222222222222222222222222222
515515516422222222222222222245566666609440000aa000cc008000000000c00000030000aa00aaaaaaa9a999999422222222222222222222222222222222
555555556422222222222222222245566666009404000a90660cc08066000660ca0008835500a900aaaaaaa9a999999422222222222222222222222222222222
515151556422222222222222222245566666094440000a90660cc08066000660caa008835500a900aaaaaaa9a999999422222222222222222222222222222222
6515151664222222222222222222455666660944040004400000cc8066000000c0aa088300004400aaaaaaa9a999999422222222222222222222222222222222
6611116664222222222222222222455666600944400000006600cc8066000660c00aa88355000000244444422444444222222222222222222222222222222222
11111111642222222222222222224556666094440400000099999999999999999999999999400000222222222222222222222222222222222222222222222222
111111116422222222222222222245566660944440000aa09444444444444444444444444440aa00222222222222222222222222222222222222222222222222
dd1ddddd6422222222222222222245566660944404000a900000000000000000000000000000a900222222222222222222222222222222222222222222222222
dddddddd64222222222222222222455666609444400004400aaaaaaaaa0aaaaaaa0aaaaaaa004400222222222222222222222222222222222222222222222222
ddddd1dd64222222222222222222455666609444040000000a999990040a0099940a009994000000222222222222222222222222222222222222222222222222
dd1ddddd6444444444444444444445566660944440000a900a999999940a9999940a99999400a900222222222222222222222222222222222222222222222222
dddddddd666666666666666666666666666094440400a994044444444404444444044444440a4440222222222222222222222222222222222222222222222222
dddd1ddd666666666666666666666666666094440000000000000000000000000000000000000000222222222222222222222222222222222222222222222222
777aaaaa666666662222222222222222666094442211112222211222222112222221122222771122222112222221122222211222222222222222222222222222
7999999a66666666222222222222222266609444219aaa122219a1222219a122221a9122279aaa12221977222219a122221a9122222222222222222222222222
7977a99966666666222222222222222266609444199449a121999a122219a12221a99912799449a121977a122219a12221a99912222222222222222222222222
a97994996666666622222222222222226660944419499a912194a9122219a122219a491219499a912177a9122219a722219a4912222222222222222222222222
a9a994996666666622222222222222226660944419499a912194a9122219a122219a491219499a912774a91222197722219a4972222222222222222222222222
a944449966666666222222222222222266609444149aa991214999122219a12221999412149aa991274999122217712221999472222222222222222222222222
a99999996666666622222222222222226660944421444912221491222219a1222219412221444912221491222277a12222194722222222222222222222222222
44444449666666662222222222222222666000002211112222211222222112222221122222111122222112222221122222277222222222222222222222222222
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000020202020203030303030302000000000000000000030300000300030000000000000000000000000000000303000000040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
8080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
8080808080808081828282828380808182828282828282828282838080808182828282828282828282828282828282828282838080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
808080808080809192929292938080919292929292929292929293808080919292929292929b9b9b9b9b9b92929292929292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
8080808080808091929292929380809192929292929292929292938080809192929292929292929292929292929292929292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
80808080808080a1a2a2a2a2a380809192929292929292929292938080809192929292929292929292929292929292929292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
8080b580b5808080808080b58080809192929292929292929292938080809192929292929292929292929292929292929292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
848586878889808080809090808080a1a2a2a2a2a2a2a2a2a2a2a3808080919292929292929b9b9b92929292929b929b9292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
9495969798998080808080808080808080808080808080808080808080809192929292929292929292929292929292929292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
a49596979899808080808080808080b580808080808080808080808080809192929292929292929292929292929292929292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
a49596979899808a8080b080808090908080808080808a9b8a9b8a80808091929b9b9b9292929292929292929b9b9b9b9b92938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
a495969798998080808080808080808080808080808080808080808080809192929292929292929292929292929292929292938080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
a49596979899808080808040808080808080804080808080808080808080a1a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a38080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
a4a5a6a7a8a98080808080808080808080808080808080808060808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
__sfx__
0001000019111191211a1311b1311c1311e1312013123121251112611120111261012710128101291012910129101291012910129101291012910129100291002910029100291002910129101001010010100101
011000003403039030390213901139011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000e00002d04034040340313402134011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4b0100000e0100e0100d0200d0300e0300e0300f030100301003011030130301502016010160101701013000150001600016000170000e0000e0000f000100001000011000130001500016000160001700000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100010240242402024020240202b0202b0222b02226020290202902228020280201c0201d0201f0201f02500000000000000000000000000000000000000000000000000000000000000000000000000000000
002000080c1300c130041300413007130071300713007130001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
02100010305453753530525375352f535345252f51534535325353751532535375253251537525325153751500505005050050500505005050050500505005050050500505005050050500505005050050500505
001000100c0230c00300003000033c6150000300003000030c0230000300003000033c6150000300003000030c0000000000000000003c6000000000000000000c0000000000000000003c600000000000000000
__music__
00 54151617

